	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/lib/nvidia-cuda-toolkit/lib//be
	// nvopencc 4.1 built on 2012-04-05

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_0000443e_00000000-9_sphere.cpp3.i (/tmp/ccBI#.8usg8j)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"/tmp/tmpxft_0000443e_00000000-8_sphere.cudafe2.gpu"
	.file	3	"/home/mk20/course/include/internal/optix_datatypes.h"
	.file	4	"/home/mk20/course/include/optixu/optixu_aabb_namespace.h"
	.file	5	"/home/mk20/course/include/internal/optix_defines.h"
	.file	6	"/tmp/tmpxft_0000443e_00000000-1_sphere.cudafe1.gpu"
	.file	7	"/gpfs/main/sys/shared/psfu/contrib/projects/gcc-4.6/4.6.3.i686/bin/../lib/gcc/i686-pc-linux-gnu/4.6.3/include/stddef.h"
	.file	8	"/usr/include/crt/device_runtime.h"
	.file	9	"/usr/include/host_defines.h"
	.file	10	"/usr/include/builtin_types.h"
	.file	11	"/usr/include/device_types.h"
	.file	12	"/usr/include/driver_types.h"
	.file	13	"/usr/include/surface_types.h"
	.file	14	"/usr/include/texture_types.h"
	.file	15	"/usr/include/vector_types.h"
	.file	16	"/usr/include/device_launch_parameters.h"
	.file	17	"/usr/include/crt/storage_class.h"
	.file	18	"/home/mk20/course/include/optix_device.h"
	.file	19	"/home/mk20/course/CS123_GPU_Ray_Tracing/ddfinal/sphere.cu"
	.file	20	"/home/mk20/course/include/internal/optix_internal.h"
	.file	21	"/usr/include/common_functions.h"
	.file	22	"/usr/include/math_functions.h"
	.file	23	"/usr/include/math_constants.h"
	.file	24	"/usr/include/device_functions.h"
	.file	25	"/usr/include/sm_11_atomic_functions.h"
	.file	26	"/usr/include/sm_12_atomic_functions.h"
	.file	27	"/usr/include/sm_13_double_functions.h"
	.file	28	"/usr/include/sm_20_atomic_functions.h"
	.file	29	"/usr/include/sm_20_intrinsics.h"
	.file	30	"/usr/include/sm_30_intrinsics.h"
	.file	31	"/usr/include/surface_functions.h"
	.file	32	"/usr/include/texture_fetch_functions.h"
	.file	33	"/usr/include/math_functions_dbl_ptx1.h"

	.global .align 16 .b8 geometric_normal[12];
	.global .align 16 .b8 shading_normal[12];
	.global .align 16 .b8 ray[36];

	.entry _Z9intersecti (
		.param .s32 __cudaparm__Z9intersecti_primIdx)
	{
	.reg .u32 %r<26>;
	.reg .f32 %f<53>;
	.reg .pred %p<4>;
	.loc	19	56	0
$LDWbegin__Z9intersecti:
	.loc	19	32	0
	mov.f32 	%f1, 0fbf800000;     	// -1
	mov.f32 	%f2, 0fbf800000;     	// -1
	ld.global.v4.f32 	{%f3,%f4,%f5,_}, [ray+0];
	mul.f32 	%f6, %f4, %f4;
	ld.global.v2.f32 	{%f7,%f8}, [ray+16];
	mul.f32 	%f9, %f7, %f7;
	add.f32 	%f10, %f4, %f4;
	add.f32 	%f11, %f3, %f3;
	add.f32 	%f12, %f5, %f5;
	mad.f32 	%f13, %f3, %f3, %f6;
	ld.global.f32 	%f14, [ray+12];
	mad.f32 	%f15, %f14, %f14, %f9;
	mul.f32 	%f16, %f10, %f7;
	mad.f32 	%f17, %f5, %f5, %f13;
	mad.f32 	%f18, %f8, %f8, %f15;
	mad.f32 	%f19, %f14, %f11, %f16;
	mov.f32 	%f20, 0f40800000;    	// 4
	mul.f32 	%f21, %f18, %f20;
	mad.f32 	%f22, %f8, %f12, %f19;
	mul.f32 	%f23, %f17, %f21;
	mul.f32 	%f24, %f22, %f22;
	sub.f32 	%f25, %f24, %f23;
	mov.f32 	%f26, 0f00000000;    	// 0
	setp.ge.f32 	%p1, %f25, %f26;
	@!%p1 bra 	$Lt_0_3842;
	.loc	19	34	0
	add.f32 	%f27, %f18, %f18;
	sqrt.approx.f32 	%f28, %f25;
	sub.f32 	%f29, %f28, %f22;
	div.approx.f32 	%f2, %f29, %f27;
	.loc	19	35	0
	add.f32 	%f30, %f22, %f28;
	neg.f32 	%f31, %f30;
	div.approx.f32 	%f1, %f31, %f27;
$Lt_0_3842:
	.loc	20	109	0
	mov.f32 	%f32, %f2;
	call (%r1), _rt_potential_intersection, (%f32);
	mov.s32 	%r2, %r1;
	.loc	19	38	0
	mov.f32 	%f33, 0f7f7fffff;    	// 3.40282e+38
	mov.s32 	%r3, 0;
	set.ne.u32.s32 	%r4, %r2, %r3;
	neg.s32 	%r5, %r4;
	mov.f32 	%f34, 0f7f7fffff;    	// 3.40282e+38
	set.lt.u32.f32 	%r6, %f2, %f34;
	neg.s32 	%r7, %r6;
	and.b32 	%r8, %r5, %r7;
	neg.s32 	%r9, %r8;
	slct.f32.s32 	%f35, %f33, %f2, %r9;
	.loc	20	109	0
	mov.f32 	%f36, %f1;
	call (%r10), _rt_potential_intersection, (%f36);
	mov.s32 	%r11, %r10;
	.loc	19	41	0
	mov.s32 	%r12, 0;
	set.ne.u32.s32 	%r13, %r11, %r12;
	neg.s32 	%r14, %r13;
	set.gt.u32.f32 	%r15, %f35, %f1;
	neg.s32 	%r16, %r15;
	and.b32 	%r17, %r14, %r16;
	neg.s32 	%r18, %r17;
	slct.f32.s32 	%f35, %f35, %f1, %r18;
	.loc	20	109	0
	mov.f32 	%f37, %f35;
	call (%r19), _rt_potential_intersection, (%f37);
	mov.s32 	%r20, %r19;
	.loc	19	44	0
	mov.u32 	%r21, 0;
	setp.eq.s32 	%p2, %r20, %r21;
	@%p2 bra 	$Lt_0_4354;
	.loc	19	46	0
	mul.f32 	%f38, %f14, %f2;
	mul.f32 	%f39, %f7, %f2;
	mul.f32 	%f40, %f8, %f2;
	add.f32 	%f41, %f38, %f3;
	add.f32 	%f42, %f39, %f4;
	add.f32 	%f43, %f40, %f5;
	mul.f32 	%f44, %f42, %f42;
	mad.f32 	%f45, %f41, %f41, %f44;
	mad.f32 	%f46, %f43, %f43, %f45;
	sqrt.approx.f32 	%f47, %f46;
	rcp.approx.f32 	%f48, %f47;
	mul.f32 	%f49, %f41, %f48;
	mul.f32 	%f50, %f42, %f48;
	st.global.v2.f32 	[geometric_normal+0], {%f49,%f50};
	mul.f32 	%f51, %f43, %f48;
	st.global.f32 	[geometric_normal+8], %f51;
	st.global.v2.f32 	[shading_normal+0], {%f49,%f50};
	st.global.f32 	[shading_normal+8], %f51;
	.loc	20	119	0
	mov.u32 	%r22, 0;
	mov.u32 	%r23, %r22;
	call (%r24), _rt_report_intersection, (%r23);
$Lt_0_4354:
	.loc	19	59	0
	exit;
$LDWend__Z9intersecti:
	} // _Z9intersecti

	.entry _Z16robust_intersecti (
		.param .s32 __cudaparm__Z16robust_intersecti_primIdx)
	{
	.reg .u32 %r<26>;
	.reg .f32 %f<53>;
	.reg .pred %p<4>;
	.loc	19	62	0
$LDWbegin__Z16robust_intersecti:
	.loc	19	32	0
	mov.f32 	%f1, 0fbf800000;     	// -1
	mov.f32 	%f2, 0fbf800000;     	// -1
	ld.global.v4.f32 	{%f3,%f4,%f5,_}, [ray+0];
	mul.f32 	%f6, %f4, %f4;
	ld.global.v2.f32 	{%f7,%f8}, [ray+16];
	mul.f32 	%f9, %f7, %f7;
	add.f32 	%f10, %f4, %f4;
	add.f32 	%f11, %f3, %f3;
	add.f32 	%f12, %f5, %f5;
	mad.f32 	%f13, %f3, %f3, %f6;
	ld.global.f32 	%f14, [ray+12];
	mad.f32 	%f15, %f14, %f14, %f9;
	mul.f32 	%f16, %f10, %f7;
	mad.f32 	%f17, %f5, %f5, %f13;
	mad.f32 	%f18, %f8, %f8, %f15;
	mad.f32 	%f19, %f14, %f11, %f16;
	mov.f32 	%f20, 0f40800000;    	// 4
	mul.f32 	%f21, %f18, %f20;
	mad.f32 	%f22, %f8, %f12, %f19;
	mul.f32 	%f23, %f17, %f21;
	mul.f32 	%f24, %f22, %f22;
	sub.f32 	%f25, %f24, %f23;
	mov.f32 	%f26, 0f00000000;    	// 0
	setp.ge.f32 	%p1, %f25, %f26;
	@!%p1 bra 	$Lt_1_3842;
	.loc	19	34	0
	add.f32 	%f27, %f18, %f18;
	sqrt.approx.f32 	%f28, %f25;
	sub.f32 	%f29, %f28, %f22;
	div.approx.f32 	%f2, %f29, %f27;
	.loc	19	35	0
	add.f32 	%f30, %f22, %f28;
	neg.f32 	%f31, %f30;
	div.approx.f32 	%f1, %f31, %f27;
$Lt_1_3842:
	.loc	20	109	0
	mov.f32 	%f32, %f2;
	call (%r1), _rt_potential_intersection, (%f32);
	mov.s32 	%r2, %r1;
	.loc	19	38	0
	mov.f32 	%f33, 0f7f7fffff;    	// 3.40282e+38
	mov.s32 	%r3, 0;
	set.ne.u32.s32 	%r4, %r2, %r3;
	neg.s32 	%r5, %r4;
	mov.f32 	%f34, 0f7f7fffff;    	// 3.40282e+38
	set.lt.u32.f32 	%r6, %f2, %f34;
	neg.s32 	%r7, %r6;
	and.b32 	%r8, %r5, %r7;
	neg.s32 	%r9, %r8;
	slct.f32.s32 	%f35, %f33, %f2, %r9;
	.loc	20	109	0
	mov.f32 	%f36, %f1;
	call (%r10), _rt_potential_intersection, (%f36);
	mov.s32 	%r11, %r10;
	.loc	19	41	0
	mov.s32 	%r12, 0;
	set.ne.u32.s32 	%r13, %r11, %r12;
	neg.s32 	%r14, %r13;
	set.gt.u32.f32 	%r15, %f35, %f1;
	neg.s32 	%r16, %r15;
	and.b32 	%r17, %r14, %r16;
	neg.s32 	%r18, %r17;
	slct.f32.s32 	%f35, %f35, %f1, %r18;
	.loc	20	109	0
	mov.f32 	%f37, %f35;
	call (%r19), _rt_potential_intersection, (%f37);
	mov.s32 	%r20, %r19;
	.loc	19	44	0
	mov.u32 	%r21, 0;
	setp.eq.s32 	%p2, %r20, %r21;
	@%p2 bra 	$Lt_1_4354;
	.loc	19	46	0
	mul.f32 	%f38, %f14, %f2;
	mul.f32 	%f39, %f7, %f2;
	mul.f32 	%f40, %f8, %f2;
	add.f32 	%f41, %f38, %f3;
	add.f32 	%f42, %f39, %f4;
	add.f32 	%f43, %f40, %f5;
	mul.f32 	%f44, %f42, %f42;
	mad.f32 	%f45, %f41, %f41, %f44;
	mad.f32 	%f46, %f43, %f43, %f45;
	sqrt.approx.f32 	%f47, %f46;
	rcp.approx.f32 	%f48, %f47;
	mul.f32 	%f49, %f41, %f48;
	mul.f32 	%f50, %f42, %f48;
	st.global.v2.f32 	[geometric_normal+0], {%f49,%f50};
	mul.f32 	%f51, %f43, %f48;
	st.global.f32 	[geometric_normal+8], %f51;
	st.global.v2.f32 	[shading_normal+0], {%f49,%f50};
	st.global.f32 	[shading_normal+8], %f51;
	.loc	20	119	0
	mov.u32 	%r22, 0;
	mov.u32 	%r23, %r22;
	call (%r24), _rt_report_intersection, (%r23);
$Lt_1_4354:
	.loc	19	65	0
	exit;
$LDWend__Z16robust_intersecti:
	} // _Z16robust_intersecti

	.entry _Z6boundsiPf (
		.param .s32 __cudaparm__Z6boundsiPf___T257,
		.param .u32 __cudaparm__Z6boundsiPf_result)
	{
	.reg .u32 %r<3>;
	.reg .f32 %f<8>;
	.loc	19	68	0
$LDWbegin__Z6boundsiPf:
	.loc	19	73	0
	ld.param.u32 	%r1, [__cudaparm__Z6boundsiPf_result];
	mov.f32 	%f1, 0fbf000000;     	// -0.5
	st.global.f32 	[%r1+0], %f1;
	mov.f32 	%f2, 0fbf000000;     	// -0.5
	st.global.f32 	[%r1+4], %f2;
	mov.f32 	%f3, 0fbf000000;     	// -0.5
	st.global.f32 	[%r1+8], %f3;
	mov.f32 	%f4, 0f3f000000;     	// 0.5
	st.global.f32 	[%r1+12], %f4;
	mov.f32 	%f5, 0f3f000000;     	// 0.5
	st.global.f32 	[%r1+16], %f5;
	mov.f32 	%f6, 0f3f000000;     	// 0.5
	st.global.f32 	[%r1+20], %f6;
	.loc	19	74	0
	exit;
$LDWend__Z6boundsiPf:
	} // _Z6boundsiPf
	.global .align 16 .b8 sphere[16];
	.global .u32 _ZN21rti_internal_register20reg_bitness_detectorE;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
	.global .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail0E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail1E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail2E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail3E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail4E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail5E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail6E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail7E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail8E;
	.global .u32 _ZN21rti_internal_register21reg_exception_detail9E;
	.global .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
	.global .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
	.global .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
	.global .align 4 .b8 _ZN21rti_internal_typeinfo6sphereE[8] = {82,97,121,0,16,0,0,0};
	.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82,97,121,0,12,0,0,0};
	.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82,97,121,0,12,0,0,0};
	.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82,97,121,0,36,0,0,0};
	.global .align 1 .b8 _ZN21rti_internal_typename6sphereE[7] = {0x66,0x6c,0x6f,0x61,0x74,0x34,0x0};
	.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {0x66,0x6c,0x6f,0x61,0x74,0x33,0x0};
	.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {0x66,0x6c,0x6f,0x61,0x74,0x33,0x0};
	.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {0x6f,0x70,0x74,0x69,0x78,0x3a,0x3a,0x52,0x61,0x79,0x0};
	.global .align 1 .b8 _ZN21rti_internal_semantic6sphereE[1] = {0x0};
	.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,0x69,0x63,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x0};
	.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x20,0x73,0x68,0x61,0x64,0x69,0x6e,0x67,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x0};
	.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {0x72,0x74,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x52,0x61,0x79,0x0};
	.global .align 1 .b8 _ZN23rti_internal_annotation6sphereE[1] = {0x0};
	.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1] = {0x0};
	.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1] = {0x0};
	.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1] = {0x0};

